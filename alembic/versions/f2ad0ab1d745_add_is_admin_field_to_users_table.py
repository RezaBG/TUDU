"""Add is_admin field to users table

Revision ID: f2ad0ab1d745
Revises: 99b724eeeb8d
Create Date: 2024-12-12 18:44:30.523616

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'f2ad0ab1d745'
down_revision: Union[str, None] = '99b724eeeb8d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None



def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_todos_description', table_name='todos')
    op.drop_index('ix_todos_title', table_name='todos')
    op.drop_table('todos')

    # Add 'is_admin' column to the 'users' table with default value 'false'
    op.add_column('users', sa.Column('is_admin', sa.Boolean(), nullable=False, server_default='false'))

    # Ensure that 'hashed_password' and 'disabled' columns are non-nullable
    op.alter_column('users', 'hashed_password',
                    existing_type=sa.VARCHAR(),
                    nullable=False)
    op.alter_column('users', 'disabled',
                    existing_type=sa.BOOLEAN(),
                    nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'disabled',
                    existing_type=sa.BOOLEAN(),
                    nullable=True)
    op.alter_column('users', 'hashed_password',
                    existing_type=sa.VARCHAR(),
                    nullable=True)
    op.drop_column('users', 'is_admin')
    op.create_table('todos',
                    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
                    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=True),
                    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
                    sa.Column('owner_id', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], name='todos_owner_id_fkey'),
                    sa.PrimaryKeyConstraint('id', name='todos_pkey')
                    )
    op.create_index('ix_todos_title', 'todos', ['title'], unique=False)
    op.create_index('ix_todos_description', 'todos', ['description'], unique=False)
    # ### end Alembic commands ###
